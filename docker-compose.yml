services:
  web:
    build: .
    volumes:
      - ./:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      migrations:
        condition: service_completed_successfully
      redis:
        condition: service_started
  
  db:
    image: postgres:15-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    env_file:
      - .env
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    container_name: furniture_redis
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  migrations:
    build: .
    command: >
      sh -c "python manage.py migrate && 
             python manage.py collectstatic --noinput"
    volumes:
      - ./:/app
      - static_volume:/app/staticfiles
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started

  celery:
    build: .
    command: celery -A furniture worker -l info
    volumes:
      - ./:/app
    env_file:
      - .env
    depends_on:
      migrations:
        condition: service_completed_successfully
      redis:
        condition: service_started
  
  celery-beat:
    build: .
    command: celery -A furniture beat -l info
    volumes:
      - ./:/app
    env_file:
      - .env
    depends_on:
      migrations:
        condition: service_completed_successfully
      redis:
        condition: service_started

volumes:
  postgres_data:
  static_volume:
  media_volume: