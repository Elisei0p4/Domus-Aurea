# Generated by Django 5.2.5 on 2025-08-14 20:26

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=100, verbose_name='Название категории')),
                ('slug', models.SlugField(max_length=100, unique=True, verbose_name='URL (слаг)')),
                ('image', models.ImageField(blank=True, null=True, upload_to='categories/', verbose_name='Изображение (для главной)')),
                ('is_featured', models.BooleanField(default=False, verbose_name='Показать на главной в новом блоке')),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='ContactMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Имя')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('subject', models.CharField(max_length=200, verbose_name='Тема')),
                ('message', models.TextField(verbose_name='Сообщение')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата отправки')),
                ('is_processed', models.BooleanField(default=False, verbose_name='Обработано')),
            ],
            options={
                'verbose_name': 'Сообщение из формы контактов',
                'verbose_name_plural': 'Сообщения из формы контактов',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Feature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Заголовок')),
                ('description', models.TextField(verbose_name='Описание')),
                ('image', models.ImageField(upload_to='features/', verbose_name='Иконка/Изображение')),
                ('display_order', models.PositiveIntegerField(default=0, verbose_name='Порядок отображения')),
            ],
            options={
                'verbose_name': 'Преимущество',
                'verbose_name_plural': 'Преимущества',
                'ordering': ['display_order'],
            },
        ),
        migrations.CreateModel(
            name='Slide',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alt_text', models.CharField(default='', max_length=200, verbose_name='Название/Альтернативный текст (для SEO и админки)')),
                ('image', models.ImageField(upload_to='slides/', verbose_name='Изображение для слайда')),
                ('link_url', models.CharField(default='/', help_text='Куда будет вести клик по слайду. Например, /shop/ или /sale/', max_length=255, verbose_name='URL-адрес для ссылки')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
                ('display_order', models.PositiveIntegerField(default=0, verbose_name='Порядок отображения')),
            ],
            options={
                'verbose_name': 'Слайд на главной',
                'verbose_name_plural': 'Слайды на главной',
                'ordering': ['display_order'],
            },
        ),
        migrations.CreateModel(
            name='SpecialOffer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Название акции (для админки)')),
                ('image', models.ImageField(upload_to='special_offers/', verbose_name='Изображение баннера')),
                ('link_url', models.CharField(blank=True, help_text='Куда будет вести клик по баннеру. Оставьте пустым, если баннер некликабельный.', max_length=255, verbose_name='URL-адрес для ссылки')),
                ('alt_text', models.CharField(blank=True, max_length=200, verbose_name='Альтернативный текст (для SEO)')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
                ('start_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата начала показа')),
                ('end_date', models.DateTimeField(verbose_name='Дата окончания показа')),
            ],
            options={
                'verbose_name': 'Специальное предложение (баннер)',
                'verbose_name_plural': 'Специальные предложения (баннеры)',
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='Subscriber',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email')),
                ('subscribed_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата подписки')),
            ],
            options={
                'verbose_name': 'Подписчик',
                'verbose_name_plural': 'Подписчики',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=200, verbose_name='Название товара')),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('image', models.ImageField(blank=True, upload_to='products/%Y/%m/%d', verbose_name='Основное изображение')),
                ('brand', models.CharField(blank=True, max_length=100, verbose_name='Бренд')),
                ('collection', models.CharField(blank=True, max_length=100, verbose_name='Коллекция')),
                ('characteristics', models.JSONField(blank=True, null=True, verbose_name='Характеристики')),
                ('model_3d', models.FileField(blank=True, help_text='Загрузите 3D модель товара в формате .glb', null=True, upload_to='products_3d/', verbose_name='3D Модель (.glb)')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('sku', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='Артикул (SKU)')),
                ('base_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Базовая цена')),
                ('discount', models.PositiveSmallIntegerField(default=0, help_text='Укажите скидку в процентах от 0 до 99.', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(99)], verbose_name='Скидка в %')),
                ('final_price', models.DecimalField(decimal_places=2, editable=False, max_digits=10, verbose_name='Итоговая цена')),
                ('stock', models.PositiveIntegerField(verbose_name='Остаток на складе')),
                ('available', models.BooleanField(default=True, verbose_name='Доступен')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('is_featured', models.BooleanField(default=False, verbose_name='Рекомендуемый (на главной)')),
                ('purchase_count', models.PositiveIntegerField(default=0, verbose_name='Количество покупок')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='store.category', verbose_name='Категория')),
            ],
            options={
                'verbose_name': 'Товар',
                'verbose_name_plural': 'Товары',
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='products/gallery/', verbose_name='Изображение')),
                ('alt_text', models.CharField(blank=True, max_length=200, verbose_name='Альтернативный текст')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='store.product', verbose_name='Товар')),
            ],
            options={
                'verbose_name': 'Изображение товара',
                'verbose_name_plural': 'Галерея изображений товара',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author_name', models.CharField(max_length=100, verbose_name='Имя автора (если не зарегистрирован)')),
                ('text', models.TextField(verbose_name='Текст отзыва')),
                ('rating', models.PositiveSmallIntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')], verbose_name='Рейтинг')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен (отображается на сайте)')),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to=settings.AUTH_USER_MODEL, verbose_name='Автор')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='store.product', verbose_name='Товар')),
            ],
            options={
                'verbose_name': 'Отзыв',
                'verbose_name_plural': 'Отзывы',
                'ordering': ('-created_at',),
            },
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['id', 'slug'], name='store_produ_id_2abda1_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['name'], name='store_produ_name_5e57da_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['-created'], name='store_produ_created_ca958a_idx'),
        ),
    ]
